package com.test.thin;

import com.test.thin.producer.Producer;
import com.test.thin.util.DES;
import org.apache.activemq.command.ActiveMQQueue;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import javax.jms.Destination;

/**
 * @author shishaopeng
 * @project onlytech-server
 * @createDate 15:38 2018/1/2
 * @modfiyDate
 * @function
 */
@RunWith(SpringRunner.class)
@SpringBootTest(classes = ActivemqApplication.class)
public class Mqtest {

    @Autowired
    private Producer producer;

    Destination destination = new ActiveMQQueue("myTest.queue");
    @Test
//    @Scheduled(cron = "0/2 0 * * * ?")
    public void sendMessage(){
        producer.sendMessage(destination,"hello world");
    }


    @Test
    public void complate(){
        String url = "";
    }

    @Test
    public void encodeTest(){
        String content = "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";
        System.out.println(new DES().DecodeCBC(content));
    }


}
